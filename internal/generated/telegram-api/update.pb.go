// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: update.proto

package telegram_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Update struct {
	state                   protoimpl.MessageState       `protogen:"open.v1"`
	UpdateId                int64                        `protobuf:"varint,1,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
	Message                 *Message                     `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"`
	EditedMessage           *Message                     `protobuf:"bytes,3,opt,name=edited_message,json=editedMessage,proto3,oneof" json:"edited_message,omitempty"`
	ChannelPost             *Message                     `protobuf:"bytes,4,opt,name=channel_post,json=channelPost,proto3,oneof" json:"channel_post,omitempty"`
	EditedChannelPost       *Message                     `protobuf:"bytes,5,opt,name=edited_channel_post,json=editedChannelPost,proto3,oneof" json:"edited_channel_post,omitempty"`
	BusinessConnection      *BusinessConnection          `protobuf:"bytes,6,opt,name=business_connection,json=businessConnection,proto3,oneof" json:"business_connection,omitempty"`
	BusinessMessage         *Message                     `protobuf:"bytes,7,opt,name=business_message,json=businessMessage,proto3,oneof" json:"business_message,omitempty"`
	EditedBusinessMessage   *Message                     `protobuf:"bytes,8,opt,name=edited_business_message,json=editedBusinessMessage,proto3,oneof" json:"edited_business_message,omitempty"`
	DeletedBusinessMessages *BusinessMessagesDeleted     `protobuf:"bytes,9,opt,name=deleted_business_messages,json=deletedBusinessMessages,proto3,oneof" json:"deleted_business_messages,omitempty"`
	MessageReaction         *MessageReactionUpdated      `protobuf:"bytes,10,opt,name=message_reaction,json=messageReaction,proto3,oneof" json:"message_reaction,omitempty"`
	MessageReactionCount    *MessageReactionCountUpdated `protobuf:"bytes,11,opt,name=message_reaction_count,json=messageReactionCount,proto3,oneof" json:"message_reaction_count,omitempty"`
	InlineQuery             *InlineQuery                 `protobuf:"bytes,12,opt,name=inline_query,json=inlineQuery,proto3,oneof" json:"inline_query,omitempty"`
	ChosenInlineResult      *ChosenInlineResult          `protobuf:"bytes,13,opt,name=chosen_inline_result,json=chosenInlineResult,proto3,oneof" json:"chosen_inline_result,omitempty"`
	CallbackQuery           *CallbackQuery               `protobuf:"bytes,14,opt,name=callback_query,json=callbackQuery,proto3,oneof" json:"callback_query,omitempty"`
	ShippingQuery           *ShippingQuery               `protobuf:"bytes,15,opt,name=shipping_query,json=shippingQuery,proto3,oneof" json:"shipping_query,omitempty"`
	PreCheckoutQuery        *PreCheckoutQuery            `protobuf:"bytes,16,opt,name=pre_checkout_query,json=preCheckoutQuery,proto3,oneof" json:"pre_checkout_query,omitempty"`
	PurchasedPaidMedia      *PaidMediaPurchased          `protobuf:"bytes,17,opt,name=purchased_paid_media,json=purchasedPaidMedia,proto3,oneof" json:"purchased_paid_media,omitempty"`
	Poll                    *Poll                        `protobuf:"bytes,18,opt,name=poll,proto3,oneof" json:"poll,omitempty"`
	PollAnswer              *PollAnswer                  `protobuf:"bytes,19,opt,name=poll_answer,json=pollAnswer,proto3,oneof" json:"poll_answer,omitempty"`
	MyChatMember            *ChatMemberUpdated           `protobuf:"bytes,20,opt,name=my_chat_member,json=myChatMember,proto3,oneof" json:"my_chat_member,omitempty"`
	ChatMember              *ChatMemberUpdated           `protobuf:"bytes,21,opt,name=chat_member,json=chatMember,proto3,oneof" json:"chat_member,omitempty"`
	ChatJoinRequest         *ChatJoinRequest             `protobuf:"bytes,22,opt,name=chat_join_request,json=chatJoinRequest,proto3,oneof" json:"chat_join_request,omitempty"`
	ChatBoost               *ChatBoostUpdated            `protobuf:"bytes,23,opt,name=chat_boost,json=chatBoost,proto3,oneof" json:"chat_boost,omitempty"`
	RemovedChatBoost        *ChatBoostRemoved            `protobuf:"bytes,24,opt,name=removed_chat_boost,json=removedChatBoost,proto3,oneof" json:"removed_chat_boost,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *Update) Reset() {
	*x = Update{}
	mi := &file_update_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_update_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_update_proto_rawDescGZIP(), []int{0}
}

func (x *Update) GetUpdateId() int64 {
	if x != nil {
		return x.UpdateId
	}
	return 0
}

func (x *Update) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *Update) GetEditedMessage() *Message {
	if x != nil {
		return x.EditedMessage
	}
	return nil
}

func (x *Update) GetChannelPost() *Message {
	if x != nil {
		return x.ChannelPost
	}
	return nil
}

func (x *Update) GetEditedChannelPost() *Message {
	if x != nil {
		return x.EditedChannelPost
	}
	return nil
}

func (x *Update) GetBusinessConnection() *BusinessConnection {
	if x != nil {
		return x.BusinessConnection
	}
	return nil
}

func (x *Update) GetBusinessMessage() *Message {
	if x != nil {
		return x.BusinessMessage
	}
	return nil
}

func (x *Update) GetEditedBusinessMessage() *Message {
	if x != nil {
		return x.EditedBusinessMessage
	}
	return nil
}

func (x *Update) GetDeletedBusinessMessages() *BusinessMessagesDeleted {
	if x != nil {
		return x.DeletedBusinessMessages
	}
	return nil
}

func (x *Update) GetMessageReaction() *MessageReactionUpdated {
	if x != nil {
		return x.MessageReaction
	}
	return nil
}

func (x *Update) GetMessageReactionCount() *MessageReactionCountUpdated {
	if x != nil {
		return x.MessageReactionCount
	}
	return nil
}

func (x *Update) GetInlineQuery() *InlineQuery {
	if x != nil {
		return x.InlineQuery
	}
	return nil
}

func (x *Update) GetChosenInlineResult() *ChosenInlineResult {
	if x != nil {
		return x.ChosenInlineResult
	}
	return nil
}

func (x *Update) GetCallbackQuery() *CallbackQuery {
	if x != nil {
		return x.CallbackQuery
	}
	return nil
}

func (x *Update) GetShippingQuery() *ShippingQuery {
	if x != nil {
		return x.ShippingQuery
	}
	return nil
}

func (x *Update) GetPreCheckoutQuery() *PreCheckoutQuery {
	if x != nil {
		return x.PreCheckoutQuery
	}
	return nil
}

func (x *Update) GetPurchasedPaidMedia() *PaidMediaPurchased {
	if x != nil {
		return x.PurchasedPaidMedia
	}
	return nil
}

func (x *Update) GetPoll() *Poll {
	if x != nil {
		return x.Poll
	}
	return nil
}

func (x *Update) GetPollAnswer() *PollAnswer {
	if x != nil {
		return x.PollAnswer
	}
	return nil
}

func (x *Update) GetMyChatMember() *ChatMemberUpdated {
	if x != nil {
		return x.MyChatMember
	}
	return nil
}

func (x *Update) GetChatMember() *ChatMemberUpdated {
	if x != nil {
		return x.ChatMember
	}
	return nil
}

func (x *Update) GetChatJoinRequest() *ChatJoinRequest {
	if x != nil {
		return x.ChatJoinRequest
	}
	return nil
}

func (x *Update) GetChatBoost() *ChatBoostUpdated {
	if x != nil {
		return x.ChatBoost
	}
	return nil
}

func (x *Update) GetRemovedChatBoost() *ChatBoostRemoved {
	if x != nil {
		return x.RemovedChatBoost
	}
	return nil
}

var File_update_proto protoreflect.FileDescriptor

var file_update_proto_rawDesc = string([]byte{
	0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x69,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x63,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x65, 0x5f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0a, 0x70, 0x6f, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc9, 0x0f, 0x0a, 0x06, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0e, 0x65, 0x64,
	0x69, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x01, 0x52, 0x0d,
	0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x30, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x02, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x3d, 0x0a, 0x13, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x03, 0x52, 0x11, 0x65, 0x64, 0x69,
	0x74, 0x65, 0x64, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x4a, 0x0a, 0x13, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x04, 0x52, 0x12, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a,
	0x10, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x05, 0x52, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x17, 0x65, 0x64, 0x69, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x48, 0x06, 0x52, 0x15, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x5b,
	0x0a, 0x19, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x48, 0x07, 0x52,
	0x17, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x49, 0x0a, 0x10, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x48, 0x08, 0x52, 0x0f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x5a, 0x0a, 0x16, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x09, 0x52, 0x14, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x35, 0x0a, 0x0c, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x48, 0x0a, 0x52, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x14, 0x63, 0x68, 0x6f,
	0x73, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e,
	0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x0b,
	0x52, 0x12, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x0c, 0x52, 0x0d, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x48, 0x0d, 0x52,
	0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01,
	0x01, 0x12, 0x46, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x0e, 0x52, 0x10, 0x70, 0x72, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x4c, 0x0a, 0x14, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x48, 0x0f,
	0x52, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x64, 0x50, 0x61, 0x69, 0x64, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x70, 0x6f, 0x6c, 0x6c, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x70, 0x6f, 0x6c, 0x6c, 0x48, 0x10, 0x52, 0x04,
	0x70, 0x6f, 0x6c, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x0b, 0x70, 0x6f, 0x6c, 0x6c, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x6f, 0x6c, 0x6c, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x11, 0x52, 0x0a, 0x70, 0x6f,
	0x6c, 0x6c, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x0e, 0x6d,
	0x79, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x12, 0x52, 0x0c, 0x6d, 0x79, 0x43,
	0x68, 0x61, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a, 0x0b,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x13, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x14, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x4a,
	0x6f, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x48, 0x15, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x42, 0x6f,
	0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x12, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f,
	0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x48, 0x16, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x43, 0x68, 0x61, 0x74, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65,
	0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x13,
	0x0a, 0x11, 0x5f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42,
	0x1c, 0x0a, 0x1a, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x19, 0x0a, 0x17, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x17,
	0x0a, 0x15, 0x5f, 0x63, 0x68, 0x6f, 0x73, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x70, 0x72, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x64, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x42, 0x07, 0x0a,
	0x05, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x79, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x42, 0x15,
	0x0a, 0x13, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x62, 0x6f, 0x6f, 0x73, 0x74, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_update_proto_rawDescOnce sync.Once
	file_update_proto_rawDescData []byte
)

func file_update_proto_rawDescGZIP() []byte {
	file_update_proto_rawDescOnce.Do(func() {
		file_update_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_update_proto_rawDesc), len(file_update_proto_rawDesc)))
	})
	return file_update_proto_rawDescData
}

var file_update_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_update_proto_goTypes = []any{
	(*Update)(nil),                      // 0: update
	(*Message)(nil),                     // 1: message
	(*BusinessConnection)(nil),          // 2: business_connection
	(*BusinessMessagesDeleted)(nil),     // 3: business_messages_deleted
	(*MessageReactionUpdated)(nil),      // 4: message_reaction_updated
	(*MessageReactionCountUpdated)(nil), // 5: message_reaction_count_updated
	(*InlineQuery)(nil),                 // 6: inline_query
	(*ChosenInlineResult)(nil),          // 7: chosen_inline_result
	(*CallbackQuery)(nil),               // 8: callback_query
	(*ShippingQuery)(nil),               // 9: shipping_query
	(*PreCheckoutQuery)(nil),            // 10: pre_checkout_query
	(*PaidMediaPurchased)(nil),          // 11: paid_media_purchased
	(*Poll)(nil),                        // 12: poll
	(*PollAnswer)(nil),                  // 13: poll_answer
	(*ChatMemberUpdated)(nil),           // 14: chat_member_updated
	(*ChatJoinRequest)(nil),             // 15: chat_join_request
	(*ChatBoostUpdated)(nil),            // 16: chat_boost_updated
	(*ChatBoostRemoved)(nil),            // 17: chat_boost_removed
}
var file_update_proto_depIdxs = []int32{
	1,  // 0: update.message:type_name -> message
	1,  // 1: update.edited_message:type_name -> message
	1,  // 2: update.channel_post:type_name -> message
	1,  // 3: update.edited_channel_post:type_name -> message
	2,  // 4: update.business_connection:type_name -> business_connection
	1,  // 5: update.business_message:type_name -> message
	1,  // 6: update.edited_business_message:type_name -> message
	3,  // 7: update.deleted_business_messages:type_name -> business_messages_deleted
	4,  // 8: update.message_reaction:type_name -> message_reaction_updated
	5,  // 9: update.message_reaction_count:type_name -> message_reaction_count_updated
	6,  // 10: update.inline_query:type_name -> inline_query
	7,  // 11: update.chosen_inline_result:type_name -> chosen_inline_result
	8,  // 12: update.callback_query:type_name -> callback_query
	9,  // 13: update.shipping_query:type_name -> shipping_query
	10, // 14: update.pre_checkout_query:type_name -> pre_checkout_query
	11, // 15: update.purchased_paid_media:type_name -> paid_media_purchased
	12, // 16: update.poll:type_name -> poll
	13, // 17: update.poll_answer:type_name -> poll_answer
	14, // 18: update.my_chat_member:type_name -> chat_member_updated
	14, // 19: update.chat_member:type_name -> chat_member_updated
	15, // 20: update.chat_join_request:type_name -> chat_join_request
	16, // 21: update.chat_boost:type_name -> chat_boost_updated
	17, // 22: update.removed_chat_boost:type_name -> chat_boost_removed
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_update_proto_init() }
func file_update_proto_init() {
	if File_update_proto != nil {
		return
	}
	file_message_proto_init()
	file_business_proto_init()
	file_reaction_proto_init()
	file_inline_query_proto_init()
	file_chosen_inline_result_proto_init()
	file_callback_query_proto_init()
	file_shipping_query_proto_init()
	file_pre_checkout_query_proto_init()
	file_paid_media_purchased_proto_init()
	file_poll_proto_init()
	file_chat_member_proto_init()
	file_chat_join_request_proto_init()
	file_chat_boost_proto_init()
	file_update_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_update_proto_rawDesc), len(file_update_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_update_proto_goTypes,
		DependencyIndexes: file_update_proto_depIdxs,
		MessageInfos:      file_update_proto_msgTypes,
	}.Build()
	File_update_proto = out.File
	file_update_proto_goTypes = nil
	file_update_proto_depIdxs = nil
}
