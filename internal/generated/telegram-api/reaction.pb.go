// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: reaction.proto

package telegram_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReactionType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*ReactionType_ReactionTypeEmoji
	//	*ReactionType_ReactionTypeCustomEmoji
	//	*ReactionType_ReactionTypePaid
	Type          isReactionType_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReactionType) Reset() {
	*x = ReactionType{}
	mi := &file_reaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionType) ProtoMessage() {}

func (x *ReactionType) ProtoReflect() protoreflect.Message {
	mi := &file_reaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionType.ProtoReflect.Descriptor instead.
func (*ReactionType) Descriptor() ([]byte, []int) {
	return file_reaction_proto_rawDescGZIP(), []int{0}
}

func (x *ReactionType) GetType() isReactionType_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ReactionType) GetReactionTypeEmoji() *ReactionTypeEmoji {
	if x != nil {
		if x, ok := x.Type.(*ReactionType_ReactionTypeEmoji); ok {
			return x.ReactionTypeEmoji
		}
	}
	return nil
}

func (x *ReactionType) GetReactionTypeCustomEmoji() *ReactionTypeCustomEmoji {
	if x != nil {
		if x, ok := x.Type.(*ReactionType_ReactionTypeCustomEmoji); ok {
			return x.ReactionTypeCustomEmoji
		}
	}
	return nil
}

func (x *ReactionType) GetReactionTypePaid() *ReactionTypePaid {
	if x != nil {
		if x, ok := x.Type.(*ReactionType_ReactionTypePaid); ok {
			return x.ReactionTypePaid
		}
	}
	return nil
}

type isReactionType_Type interface {
	isReactionType_Type()
}

type ReactionType_ReactionTypeEmoji struct {
	ReactionTypeEmoji *ReactionTypeEmoji `protobuf:"bytes,1,opt,name=reaction_type_emoji,json=reactionTypeEmoji,proto3,oneof"`
}

type ReactionType_ReactionTypeCustomEmoji struct {
	ReactionTypeCustomEmoji *ReactionTypeCustomEmoji `protobuf:"bytes,2,opt,name=reaction_type_custom_emoji,json=reactionTypeCustomEmoji,proto3,oneof"`
}

type ReactionType_ReactionTypePaid struct {
	ReactionTypePaid *ReactionTypePaid `protobuf:"bytes,3,opt,name=reaction_type_paid,json=reactionTypePaid,proto3,oneof"`
}

func (*ReactionType_ReactionTypeEmoji) isReactionType_Type() {}

func (*ReactionType_ReactionTypeCustomEmoji) isReactionType_Type() {}

func (*ReactionType_ReactionTypePaid) isReactionType_Type() {}

type ReactionTypeEmoji struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Emoji         string                 `protobuf:"bytes,2,opt,name=emoji,proto3" json:"emoji,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReactionTypeEmoji) Reset() {
	*x = ReactionTypeEmoji{}
	mi := &file_reaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactionTypeEmoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionTypeEmoji) ProtoMessage() {}

func (x *ReactionTypeEmoji) ProtoReflect() protoreflect.Message {
	mi := &file_reaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionTypeEmoji.ProtoReflect.Descriptor instead.
func (*ReactionTypeEmoji) Descriptor() ([]byte, []int) {
	return file_reaction_proto_rawDescGZIP(), []int{1}
}

func (x *ReactionTypeEmoji) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReactionTypeEmoji) GetEmoji() string {
	if x != nil {
		return x.Emoji
	}
	return ""
}

type ReactionTypeCustomEmoji struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CustomEmojiId string                 `protobuf:"bytes,2,opt,name=custom_emoji_id,json=customEmojiId,proto3" json:"custom_emoji_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReactionTypeCustomEmoji) Reset() {
	*x = ReactionTypeCustomEmoji{}
	mi := &file_reaction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactionTypeCustomEmoji) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionTypeCustomEmoji) ProtoMessage() {}

func (x *ReactionTypeCustomEmoji) ProtoReflect() protoreflect.Message {
	mi := &file_reaction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionTypeCustomEmoji.ProtoReflect.Descriptor instead.
func (*ReactionTypeCustomEmoji) Descriptor() ([]byte, []int) {
	return file_reaction_proto_rawDescGZIP(), []int{2}
}

func (x *ReactionTypeCustomEmoji) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReactionTypeCustomEmoji) GetCustomEmojiId() string {
	if x != nil {
		return x.CustomEmojiId
	}
	return ""
}

type ReactionTypePaid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReactionTypePaid) Reset() {
	*x = ReactionTypePaid{}
	mi := &file_reaction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactionTypePaid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionTypePaid) ProtoMessage() {}

func (x *ReactionTypePaid) ProtoReflect() protoreflect.Message {
	mi := &file_reaction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionTypePaid.ProtoReflect.Descriptor instead.
func (*ReactionTypePaid) Descriptor() ([]byte, []int) {
	return file_reaction_proto_rawDescGZIP(), []int{3}
}

func (x *ReactionTypePaid) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type MessageReactionUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chat          *Chat                  `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	MessageId     int32                  `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	User          *User                  `protobuf:"bytes,3,opt,name=user,proto3,oneof" json:"user,omitempty"`
	ActorChat     *Chat                  `protobuf:"bytes,4,opt,name=actor_chat,json=actorChat,proto3,oneof" json:"actor_chat,omitempty"`
	Date          int32                  `protobuf:"varint,5,opt,name=date,proto3" json:"date,omitempty"`
	OldReaction   []*ReactionType        `protobuf:"bytes,6,rep,name=old_reaction,json=oldReaction,proto3" json:"old_reaction,omitempty"`
	NewReaction   []*ReactionType        `protobuf:"bytes,7,rep,name=new_reaction,json=newReaction,proto3" json:"new_reaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageReactionUpdated) Reset() {
	*x = MessageReactionUpdated{}
	mi := &file_reaction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReactionUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionUpdated) ProtoMessage() {}

func (x *MessageReactionUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_reaction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionUpdated.ProtoReflect.Descriptor instead.
func (*MessageReactionUpdated) Descriptor() ([]byte, []int) {
	return file_reaction_proto_rawDescGZIP(), []int{4}
}

func (x *MessageReactionUpdated) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *MessageReactionUpdated) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageReactionUpdated) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *MessageReactionUpdated) GetActorChat() *Chat {
	if x != nil {
		return x.ActorChat
	}
	return nil
}

func (x *MessageReactionUpdated) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *MessageReactionUpdated) GetOldReaction() []*ReactionType {
	if x != nil {
		return x.OldReaction
	}
	return nil
}

func (x *MessageReactionUpdated) GetNewReaction() []*ReactionType {
	if x != nil {
		return x.NewReaction
	}
	return nil
}

type MessageReactionCountUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chat          *Chat                  `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
	MessageId     int32                  `protobuf:"varint,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Date          int32                  `protobuf:"varint,3,opt,name=date,proto3" json:"date,omitempty"`
	Reactions     []*ReactionCount       `protobuf:"bytes,4,rep,name=reactions,proto3" json:"reactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageReactionCountUpdated) Reset() {
	*x = MessageReactionCountUpdated{}
	mi := &file_reaction_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageReactionCountUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageReactionCountUpdated) ProtoMessage() {}

func (x *MessageReactionCountUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_reaction_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageReactionCountUpdated.ProtoReflect.Descriptor instead.
func (*MessageReactionCountUpdated) Descriptor() ([]byte, []int) {
	return file_reaction_proto_rawDescGZIP(), []int{5}
}

func (x *MessageReactionCountUpdated) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *MessageReactionCountUpdated) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageReactionCountUpdated) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *MessageReactionCountUpdated) GetReactions() []*ReactionCount {
	if x != nil {
		return x.Reactions
	}
	return nil
}

type ReactionCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *ReactionType          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReactionCount) Reset() {
	*x = ReactionCount{}
	mi := &file_reaction_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReactionCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionCount) ProtoMessage() {}

func (x *ReactionCount) ProtoReflect() protoreflect.Message {
	mi := &file_reaction_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionCount.ProtoReflect.Descriptor instead.
func (*ReactionCount) Descriptor() ([]byte, []int) {
	return file_reaction_proto_rawDescGZIP(), []int{6}
}

func (x *ReactionCount) GetType() *ReactionType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ReactionCount) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_reaction_proto protoreflect.FileDescriptor

var file_reaction_proto_rawDesc = string([]byte{
	0x0a, 0x0e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x02, 0x0a, 0x0d, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x46, 0x0a, 0x13, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6d, 0x6f, 0x6a,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x48, 0x00, 0x52,
	0x11, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6d, 0x6f,
	0x6a, 0x69, 0x12, 0x5a, 0x0a, 0x1a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x6d,
	0x6f, 0x6a, 0x69, 0x48, 0x00, 0x52, 0x17, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x43,
	0x0a, 0x12, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x70, 0x61, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x48,
	0x00, 0x52, 0x10, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50,
	0x61, 0x69, 0x64, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3f, 0x0a, 0x13, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x65, 0x6d, 0x6f,
	0x6a, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x22, 0x58, 0x0a, 0x1a,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x6d, 0x6f, 0x6a, 0x69, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45,
	0x6d, 0x6f, 0x6a, 0x69, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x12, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x22, 0xb1, 0x02, 0x0a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x63, 0x68, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x48, 0x01, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x72, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x6f, 0x6c,
	0x64, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0c, 0x6e, 0x65, 0x77,
	0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52,
	0x0b, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x1e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68,
	0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x55, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x18, 0x5a, 0x16, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x2d, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_reaction_proto_rawDescOnce sync.Once
	file_reaction_proto_rawDescData []byte
)

func file_reaction_proto_rawDescGZIP() []byte {
	file_reaction_proto_rawDescOnce.Do(func() {
		file_reaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_reaction_proto_rawDesc), len(file_reaction_proto_rawDesc)))
	})
	return file_reaction_proto_rawDescData
}

var file_reaction_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_reaction_proto_goTypes = []any{
	(*ReactionType)(nil),                // 0: reaction_type
	(*ReactionTypeEmoji)(nil),           // 1: reaction_type_emoji
	(*ReactionTypeCustomEmoji)(nil),     // 2: reaction_type_custom_emoji
	(*ReactionTypePaid)(nil),            // 3: reaction_type_paid
	(*MessageReactionUpdated)(nil),      // 4: message_reaction_updated
	(*MessageReactionCountUpdated)(nil), // 5: message_reaction_count_updated
	(*ReactionCount)(nil),               // 6: reaction_count
	(*Chat)(nil),                        // 7: chat
	(*User)(nil),                        // 8: user
}
var file_reaction_proto_depIdxs = []int32{
	1,  // 0: reaction_type.reaction_type_emoji:type_name -> reaction_type_emoji
	2,  // 1: reaction_type.reaction_type_custom_emoji:type_name -> reaction_type_custom_emoji
	3,  // 2: reaction_type.reaction_type_paid:type_name -> reaction_type_paid
	7,  // 3: message_reaction_updated.chat:type_name -> chat
	8,  // 4: message_reaction_updated.user:type_name -> user
	7,  // 5: message_reaction_updated.actor_chat:type_name -> chat
	0,  // 6: message_reaction_updated.old_reaction:type_name -> reaction_type
	0,  // 7: message_reaction_updated.new_reaction:type_name -> reaction_type
	7,  // 8: message_reaction_count_updated.chat:type_name -> chat
	6,  // 9: message_reaction_count_updated.reactions:type_name -> reaction_count
	0,  // 10: reaction_count.type:type_name -> reaction_type
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_reaction_proto_init() }
func file_reaction_proto_init() {
	if File_reaction_proto != nil {
		return
	}
	file_chat_proto_init()
	file_user_proto_init()
	file_reaction_proto_msgTypes[0].OneofWrappers = []any{
		(*ReactionType_ReactionTypeEmoji)(nil),
		(*ReactionType_ReactionTypeCustomEmoji)(nil),
		(*ReactionType_ReactionTypePaid)(nil),
	}
	file_reaction_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_reaction_proto_rawDesc), len(file_reaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_reaction_proto_goTypes,
		DependencyIndexes: file_reaction_proto_depIdxs,
		MessageInfos:      file_reaction_proto_msgTypes,
	}.Build()
	File_reaction_proto = out.File
	file_reaction_proto_goTypes = nil
	file_reaction_proto_depIdxs = nil
}
