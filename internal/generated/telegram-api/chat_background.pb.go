// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: chat_background.proto

package telegram_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatBackground struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *BackgroundType        `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatBackground) Reset() {
	*x = ChatBackground{}
	mi := &file_chat_background_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatBackground) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatBackground) ProtoMessage() {}

func (x *ChatBackground) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatBackground.ProtoReflect.Descriptor instead.
func (*ChatBackground) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{0}
}

func (x *ChatBackground) GetType() *BackgroundType {
	if x != nil {
		return x.Type
	}
	return nil
}

type BackgroundType struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Type:
	//
	//	*BackgroundType_Fill
	//	*BackgroundType_Wallpaper
	//	*BackgroundType_Pattern
	//	*BackgroundType_ChatTheme
	Type          isBackgroundType_Type `protobuf_oneof:"type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackgroundType) Reset() {
	*x = BackgroundType{}
	mi := &file_chat_background_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundType) ProtoMessage() {}

func (x *BackgroundType) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundType.ProtoReflect.Descriptor instead.
func (*BackgroundType) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{1}
}

func (x *BackgroundType) GetType() isBackgroundType_Type {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *BackgroundType) GetFill() *BackgroundTypeFill {
	if x != nil {
		if x, ok := x.Type.(*BackgroundType_Fill); ok {
			return x.Fill
		}
	}
	return nil
}

func (x *BackgroundType) GetWallpaper() *BackgroundTypeWallpaper {
	if x != nil {
		if x, ok := x.Type.(*BackgroundType_Wallpaper); ok {
			return x.Wallpaper
		}
	}
	return nil
}

func (x *BackgroundType) GetPattern() *BackgroundTypePattern {
	if x != nil {
		if x, ok := x.Type.(*BackgroundType_Pattern); ok {
			return x.Pattern
		}
	}
	return nil
}

func (x *BackgroundType) GetChatTheme() *BackgroundTypeChatTheme {
	if x != nil {
		if x, ok := x.Type.(*BackgroundType_ChatTheme); ok {
			return x.ChatTheme
		}
	}
	return nil
}

type isBackgroundType_Type interface {
	isBackgroundType_Type()
}

type BackgroundType_Fill struct {
	Fill *BackgroundTypeFill `protobuf:"bytes,1,opt,name=fill,proto3,oneof"`
}

type BackgroundType_Wallpaper struct {
	Wallpaper *BackgroundTypeWallpaper `protobuf:"bytes,2,opt,name=wallpaper,proto3,oneof"`
}

type BackgroundType_Pattern struct {
	Pattern *BackgroundTypePattern `protobuf:"bytes,3,opt,name=pattern,proto3,oneof"`
}

type BackgroundType_ChatTheme struct {
	ChatTheme *BackgroundTypeChatTheme `protobuf:"bytes,4,opt,name=chat_theme,json=chatTheme,proto3,oneof"`
}

func (*BackgroundType_Fill) isBackgroundType_Type() {}

func (*BackgroundType_Wallpaper) isBackgroundType_Type() {}

func (*BackgroundType_Pattern) isBackgroundType_Type() {}

func (*BackgroundType_ChatTheme) isBackgroundType_Type() {}

type BackgroundTypeFill struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Type             string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Fill             *BackgroundFill        `protobuf:"bytes,2,opt,name=fill,proto3" json:"fill,omitempty"`
	DarkThemeDimming int32                  `protobuf:"varint,3,opt,name=dark_theme_dimming,json=darkThemeDimming,proto3" json:"dark_theme_dimming,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BackgroundTypeFill) Reset() {
	*x = BackgroundTypeFill{}
	mi := &file_chat_background_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundTypeFill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundTypeFill) ProtoMessage() {}

func (x *BackgroundTypeFill) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundTypeFill.ProtoReflect.Descriptor instead.
func (*BackgroundTypeFill) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{2}
}

func (x *BackgroundTypeFill) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BackgroundTypeFill) GetFill() *BackgroundFill {
	if x != nil {
		return x.Fill
	}
	return nil
}

func (x *BackgroundTypeFill) GetDarkThemeDimming() int32 {
	if x != nil {
		return x.DarkThemeDimming
	}
	return 0
}

type BackgroundTypeWallpaper struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Type             string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Document         *Document              `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	DarkThemeDimming int32                  `protobuf:"varint,3,opt,name=dark_theme_dimming,json=darkThemeDimming,proto3" json:"dark_theme_dimming,omitempty"`
	IsBlurred        bool                   `protobuf:"varint,4,opt,name=is_blurred,json=isBlurred,proto3" json:"is_blurred,omitempty"`
	IsMoving         bool                   `protobuf:"varint,5,opt,name=is_moving,json=isMoving,proto3" json:"is_moving,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BackgroundTypeWallpaper) Reset() {
	*x = BackgroundTypeWallpaper{}
	mi := &file_chat_background_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundTypeWallpaper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundTypeWallpaper) ProtoMessage() {}

func (x *BackgroundTypeWallpaper) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundTypeWallpaper.ProtoReflect.Descriptor instead.
func (*BackgroundTypeWallpaper) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{3}
}

func (x *BackgroundTypeWallpaper) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BackgroundTypeWallpaper) GetDocument() *Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *BackgroundTypeWallpaper) GetDarkThemeDimming() int32 {
	if x != nil {
		return x.DarkThemeDimming
	}
	return 0
}

func (x *BackgroundTypeWallpaper) GetIsBlurred() bool {
	if x != nil {
		return x.IsBlurred
	}
	return false
}

func (x *BackgroundTypeWallpaper) GetIsMoving() bool {
	if x != nil {
		return x.IsMoving
	}
	return false
}

type BackgroundTypePattern struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Document      *Document              `protobuf:"bytes,2,opt,name=document,proto3" json:"document,omitempty"`
	Fill          *BackgroundFill        `protobuf:"bytes,3,opt,name=fill,proto3" json:"fill,omitempty"`
	Intensity     int32                  `protobuf:"varint,4,opt,name=intensity,proto3" json:"intensity,omitempty"`
	IsInverted    bool                   `protobuf:"varint,5,opt,name=is_inverted,json=isInverted,proto3" json:"is_inverted,omitempty"`
	IsMoving      bool                   `protobuf:"varint,6,opt,name=is_moving,json=isMoving,proto3" json:"is_moving,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackgroundTypePattern) Reset() {
	*x = BackgroundTypePattern{}
	mi := &file_chat_background_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundTypePattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundTypePattern) ProtoMessage() {}

func (x *BackgroundTypePattern) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundTypePattern.ProtoReflect.Descriptor instead.
func (*BackgroundTypePattern) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{4}
}

func (x *BackgroundTypePattern) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BackgroundTypePattern) GetDocument() *Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *BackgroundTypePattern) GetFill() *BackgroundFill {
	if x != nil {
		return x.Fill
	}
	return nil
}

func (x *BackgroundTypePattern) GetIntensity() int32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

func (x *BackgroundTypePattern) GetIsInverted() bool {
	if x != nil {
		return x.IsInverted
	}
	return false
}

func (x *BackgroundTypePattern) GetIsMoving() bool {
	if x != nil {
		return x.IsMoving
	}
	return false
}

type BackgroundTypeChatTheme struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ThemeName     string                 `protobuf:"bytes,2,opt,name=theme_name,json=themeName,proto3" json:"theme_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackgroundTypeChatTheme) Reset() {
	*x = BackgroundTypeChatTheme{}
	mi := &file_chat_background_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundTypeChatTheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundTypeChatTheme) ProtoMessage() {}

func (x *BackgroundTypeChatTheme) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundTypeChatTheme.ProtoReflect.Descriptor instead.
func (*BackgroundTypeChatTheme) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{5}
}

func (x *BackgroundTypeChatTheme) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BackgroundTypeChatTheme) GetThemeName() string {
	if x != nil {
		return x.ThemeName
	}
	return ""
}

type BackgroundFill struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Fill:
	//
	//	*BackgroundFill_Solid
	//	*BackgroundFill_Gradient
	//	*BackgroundFill_FreeformGradient
	Fill          isBackgroundFill_Fill `protobuf_oneof:"fill"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackgroundFill) Reset() {
	*x = BackgroundFill{}
	mi := &file_chat_background_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundFill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundFill) ProtoMessage() {}

func (x *BackgroundFill) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundFill.ProtoReflect.Descriptor instead.
func (*BackgroundFill) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{6}
}

func (x *BackgroundFill) GetFill() isBackgroundFill_Fill {
	if x != nil {
		return x.Fill
	}
	return nil
}

func (x *BackgroundFill) GetSolid() *BackgroundFillSolid {
	if x != nil {
		if x, ok := x.Fill.(*BackgroundFill_Solid); ok {
			return x.Solid
		}
	}
	return nil
}

func (x *BackgroundFill) GetGradient() *BackgroundFillGradient {
	if x != nil {
		if x, ok := x.Fill.(*BackgroundFill_Gradient); ok {
			return x.Gradient
		}
	}
	return nil
}

func (x *BackgroundFill) GetFreeformGradient() *BackgroundFillFreeformGradient {
	if x != nil {
		if x, ok := x.Fill.(*BackgroundFill_FreeformGradient); ok {
			return x.FreeformGradient
		}
	}
	return nil
}

type isBackgroundFill_Fill interface {
	isBackgroundFill_Fill()
}

type BackgroundFill_Solid struct {
	Solid *BackgroundFillSolid `protobuf:"bytes,1,opt,name=solid,proto3,oneof"`
}

type BackgroundFill_Gradient struct {
	Gradient *BackgroundFillGradient `protobuf:"bytes,2,opt,name=gradient,proto3,oneof"`
}

type BackgroundFill_FreeformGradient struct {
	FreeformGradient *BackgroundFillFreeformGradient `protobuf:"bytes,3,opt,name=freeform_gradient,json=freeformGradient,proto3,oneof"`
}

func (*BackgroundFill_Solid) isBackgroundFill_Fill() {}

func (*BackgroundFill_Gradient) isBackgroundFill_Fill() {}

func (*BackgroundFill_FreeformGradient) isBackgroundFill_Fill() {}

type BackgroundFillSolid struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Color         int32                  `protobuf:"varint,2,opt,name=color,proto3" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackgroundFillSolid) Reset() {
	*x = BackgroundFillSolid{}
	mi := &file_chat_background_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundFillSolid) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundFillSolid) ProtoMessage() {}

func (x *BackgroundFillSolid) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundFillSolid.ProtoReflect.Descriptor instead.
func (*BackgroundFillSolid) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{7}
}

func (x *BackgroundFillSolid) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BackgroundFillSolid) GetColor() int32 {
	if x != nil {
		return x.Color
	}
	return 0
}

type BackgroundFillGradient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	TopColor      int32                  `protobuf:"varint,2,opt,name=top_color,json=topColor,proto3" json:"top_color,omitempty"`
	BottomColor   int32                  `protobuf:"varint,3,opt,name=bottom_color,json=bottomColor,proto3" json:"bottom_color,omitempty"`
	RotationAngle int32                  `protobuf:"varint,4,opt,name=rotation_angle,json=rotationAngle,proto3" json:"rotation_angle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackgroundFillGradient) Reset() {
	*x = BackgroundFillGradient{}
	mi := &file_chat_background_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundFillGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundFillGradient) ProtoMessage() {}

func (x *BackgroundFillGradient) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundFillGradient.ProtoReflect.Descriptor instead.
func (*BackgroundFillGradient) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{8}
}

func (x *BackgroundFillGradient) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BackgroundFillGradient) GetTopColor() int32 {
	if x != nil {
		return x.TopColor
	}
	return 0
}

func (x *BackgroundFillGradient) GetBottomColor() int32 {
	if x != nil {
		return x.BottomColor
	}
	return 0
}

func (x *BackgroundFillGradient) GetRotationAngle() int32 {
	if x != nil {
		return x.RotationAngle
	}
	return 0
}

type BackgroundFillFreeformGradient struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Colors        []int32                `protobuf:"varint,2,rep,packed,name=colors,proto3" json:"colors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BackgroundFillFreeformGradient) Reset() {
	*x = BackgroundFillFreeformGradient{}
	mi := &file_chat_background_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackgroundFillFreeformGradient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackgroundFillFreeformGradient) ProtoMessage() {}

func (x *BackgroundFillFreeformGradient) ProtoReflect() protoreflect.Message {
	mi := &file_chat_background_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackgroundFillFreeformGradient.ProtoReflect.Descriptor instead.
func (*BackgroundFillFreeformGradient) Descriptor() ([]byte, []int) {
	return file_chat_background_proto_rawDescGZIP(), []int{9}
}

func (x *BackgroundFillFreeformGradient) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BackgroundFillFreeformGradient) GetColors() []int32 {
	if x != nil {
		return x.Colors
	}
	return nil
}

var File_chat_background_proto protoreflect.FileDescriptor

var file_chat_background_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xf6, 0x01,
	0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x3a,
	0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x09, 0x77, 0x61, 0x6c, 0x6c, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x12, 0x3c, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x6d,
	0x65, 0x48, 0x00, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x42, 0x06,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x7e, 0x0a, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x61, 0x72, 0x6b,
	0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x61, 0x72, 0x6b, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x44,
	0x69, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x22, 0xc0, 0x01, 0x0a, 0x19, 0x62, 0x61, 0x63, 0x6b, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x64, 0x61, 0x72, 0x6b, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x64, 0x69,
	0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x61, 0x72,
	0x6b, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x44, 0x69, 0x6d, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x42, 0x6c, 0x75, 0x72, 0x72, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x69, 0x73, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x22, 0xd6, 0x01, 0x0a, 0x17, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x76, 0x69,
	0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x6f, 0x76, 0x69,
	0x6e, 0x67, 0x22, 0x4f, 0x0a, 0x1a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0xd5, 0x01, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x12, 0x2e, 0x0a, 0x05, 0x73, 0x6f, 0x6c, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x48, 0x00,
	0x52, 0x05, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x67, 0x72, 0x61, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64,
	0x69, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x51, 0x0a, 0x11, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x67, 0x72, 0x61,
	0x64, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x61,
	0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x66, 0x72,
	0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x10, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x47, 0x72, 0x61, 0x64, 0x69,
	0x65, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x6c, 0x22, 0x41, 0x0a, 0x15, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x73,
	0x6f, 0x6c, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x95,
	0x01, 0x0a, 0x18, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69,
	0x6c, 0x6c, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6e, 0x67, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x22, 0x4f, 0x0a, 0x21, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x66, 0x6f,
	0x72, 0x6d, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2d, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_chat_background_proto_rawDescOnce sync.Once
	file_chat_background_proto_rawDescData []byte
)

func file_chat_background_proto_rawDescGZIP() []byte {
	file_chat_background_proto_rawDescOnce.Do(func() {
		file_chat_background_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_background_proto_rawDesc), len(file_chat_background_proto_rawDesc)))
	})
	return file_chat_background_proto_rawDescData
}

var file_chat_background_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_chat_background_proto_goTypes = []any{
	(*ChatBackground)(nil),                 // 0: chat_background
	(*BackgroundType)(nil),                 // 1: background_type
	(*BackgroundTypeFill)(nil),             // 2: background_type_fill
	(*BackgroundTypeWallpaper)(nil),        // 3: background_type_wallpaper
	(*BackgroundTypePattern)(nil),          // 4: background_type_pattern
	(*BackgroundTypeChatTheme)(nil),        // 5: background_type_chat_theme
	(*BackgroundFill)(nil),                 // 6: background_fill
	(*BackgroundFillSolid)(nil),            // 7: background_fill_solid
	(*BackgroundFillGradient)(nil),         // 8: background_fill_gradient
	(*BackgroundFillFreeformGradient)(nil), // 9: background_fill_freeform_gradient
	(*Document)(nil),                       // 10: document
}
var file_chat_background_proto_depIdxs = []int32{
	1,  // 0: chat_background.type:type_name -> background_type
	2,  // 1: background_type.fill:type_name -> background_type_fill
	3,  // 2: background_type.wallpaper:type_name -> background_type_wallpaper
	4,  // 3: background_type.pattern:type_name -> background_type_pattern
	5,  // 4: background_type.chat_theme:type_name -> background_type_chat_theme
	6,  // 5: background_type_fill.fill:type_name -> background_fill
	10, // 6: background_type_wallpaper.document:type_name -> document
	10, // 7: background_type_pattern.document:type_name -> document
	6,  // 8: background_type_pattern.fill:type_name -> background_fill
	7,  // 9: background_fill.solid:type_name -> background_fill_solid
	8,  // 10: background_fill.gradient:type_name -> background_fill_gradient
	9,  // 11: background_fill.freeform_gradient:type_name -> background_fill_freeform_gradient
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_chat_background_proto_init() }
func file_chat_background_proto_init() {
	if File_chat_background_proto != nil {
		return
	}
	file_media_proto_init()
	file_chat_background_proto_msgTypes[1].OneofWrappers = []any{
		(*BackgroundType_Fill)(nil),
		(*BackgroundType_Wallpaper)(nil),
		(*BackgroundType_Pattern)(nil),
		(*BackgroundType_ChatTheme)(nil),
	}
	file_chat_background_proto_msgTypes[6].OneofWrappers = []any{
		(*BackgroundFill_Solid)(nil),
		(*BackgroundFill_Gradient)(nil),
		(*BackgroundFill_FreeformGradient)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_background_proto_rawDesc), len(file_chat_background_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_background_proto_goTypes,
		DependencyIndexes: file_chat_background_proto_depIdxs,
		MessageInfos:      file_chat_background_proto_msgTypes,
	}.Build()
	File_chat_background_proto = out.File
	file_chat_background_proto_goTypes = nil
	file_chat_background_proto_depIdxs = nil
}
