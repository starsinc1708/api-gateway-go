// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: chat_permissions.proto

package telegram_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatPermissions struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	CanSendMessages       *bool                  `protobuf:"varint,1,opt,name=can_send_messages,json=canSendMessages,proto3,oneof" json:"can_send_messages,omitempty"`
	CanSendAudios         *bool                  `protobuf:"varint,2,opt,name=can_send_audios,json=canSendAudios,proto3,oneof" json:"can_send_audios,omitempty"`
	CanSendDocuments      *bool                  `protobuf:"varint,3,opt,name=can_send_documents,json=canSendDocuments,proto3,oneof" json:"can_send_documents,omitempty"`
	CanSendPhotos         *bool                  `protobuf:"varint,4,opt,name=can_send_photos,json=canSendPhotos,proto3,oneof" json:"can_send_photos,omitempty"`
	CanSendVideos         *bool                  `protobuf:"varint,5,opt,name=can_send_videos,json=canSendVideos,proto3,oneof" json:"can_send_videos,omitempty"`
	CanSendVideoNotes     *bool                  `protobuf:"varint,6,opt,name=can_send_video_notes,json=canSendVideoNotes,proto3,oneof" json:"can_send_video_notes,omitempty"`
	CanSendVoiceNotes     *bool                  `protobuf:"varint,7,opt,name=can_send_voice_notes,json=canSendVoiceNotes,proto3,oneof" json:"can_send_voice_notes,omitempty"`
	CanSendPolls          *bool                  `protobuf:"varint,8,opt,name=can_send_polls,json=canSendPolls,proto3,oneof" json:"can_send_polls,omitempty"`
	CanSendOtherMessages  *bool                  `protobuf:"varint,9,opt,name=can_send_other_messages,json=canSendOtherMessages,proto3,oneof" json:"can_send_other_messages,omitempty"`
	CanAddWebPagePreviews *bool                  `protobuf:"varint,10,opt,name=can_add_web_page_previews,json=canAddWebPagePreviews,proto3,oneof" json:"can_add_web_page_previews,omitempty"`
	CanChangeInfo         *bool                  `protobuf:"varint,11,opt,name=can_change_info,json=canChangeInfo,proto3,oneof" json:"can_change_info,omitempty"`
	CanInviteUsers        *bool                  `protobuf:"varint,12,opt,name=can_invite_users,json=canInviteUsers,proto3,oneof" json:"can_invite_users,omitempty"`
	CanPinMessages        *bool                  `protobuf:"varint,13,opt,name=can_pin_messages,json=canPinMessages,proto3,oneof" json:"can_pin_messages,omitempty"`
	CanManageTopics       *bool                  `protobuf:"varint,14,opt,name=can_manage_topics,json=canManageTopics,proto3,oneof" json:"can_manage_topics,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ChatPermissions) Reset() {
	*x = ChatPermissions{}
	mi := &file_chat_permissions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatPermissions) ProtoMessage() {}

func (x *ChatPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_chat_permissions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatPermissions.ProtoReflect.Descriptor instead.
func (*ChatPermissions) Descriptor() ([]byte, []int) {
	return file_chat_permissions_proto_rawDescGZIP(), []int{0}
}

func (x *ChatPermissions) GetCanSendMessages() bool {
	if x != nil && x.CanSendMessages != nil {
		return *x.CanSendMessages
	}
	return false
}

func (x *ChatPermissions) GetCanSendAudios() bool {
	if x != nil && x.CanSendAudios != nil {
		return *x.CanSendAudios
	}
	return false
}

func (x *ChatPermissions) GetCanSendDocuments() bool {
	if x != nil && x.CanSendDocuments != nil {
		return *x.CanSendDocuments
	}
	return false
}

func (x *ChatPermissions) GetCanSendPhotos() bool {
	if x != nil && x.CanSendPhotos != nil {
		return *x.CanSendPhotos
	}
	return false
}

func (x *ChatPermissions) GetCanSendVideos() bool {
	if x != nil && x.CanSendVideos != nil {
		return *x.CanSendVideos
	}
	return false
}

func (x *ChatPermissions) GetCanSendVideoNotes() bool {
	if x != nil && x.CanSendVideoNotes != nil {
		return *x.CanSendVideoNotes
	}
	return false
}

func (x *ChatPermissions) GetCanSendVoiceNotes() bool {
	if x != nil && x.CanSendVoiceNotes != nil {
		return *x.CanSendVoiceNotes
	}
	return false
}

func (x *ChatPermissions) GetCanSendPolls() bool {
	if x != nil && x.CanSendPolls != nil {
		return *x.CanSendPolls
	}
	return false
}

func (x *ChatPermissions) GetCanSendOtherMessages() bool {
	if x != nil && x.CanSendOtherMessages != nil {
		return *x.CanSendOtherMessages
	}
	return false
}

func (x *ChatPermissions) GetCanAddWebPagePreviews() bool {
	if x != nil && x.CanAddWebPagePreviews != nil {
		return *x.CanAddWebPagePreviews
	}
	return false
}

func (x *ChatPermissions) GetCanChangeInfo() bool {
	if x != nil && x.CanChangeInfo != nil {
		return *x.CanChangeInfo
	}
	return false
}

func (x *ChatPermissions) GetCanInviteUsers() bool {
	if x != nil && x.CanInviteUsers != nil {
		return *x.CanInviteUsers
	}
	return false
}

func (x *ChatPermissions) GetCanPinMessages() bool {
	if x != nil && x.CanPinMessages != nil {
		return *x.CanPinMessages
	}
	return false
}

func (x *ChatPermissions) GetCanManageTopics() bool {
	if x != nil && x.CanManageTopics != nil {
		return *x.CanManageTopics
	}
	return false
}

var File_chat_permissions_proto protoreflect.FileDescriptor

var file_chat_permissions_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x08, 0x0a, 0x10, 0x63, 0x68, 0x61,
	0x74, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a,
	0x11, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x53, 0x65,
	0x6e, 0x64, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x53, 0x65,
	0x6e, 0x64, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x53, 0x65,
	0x6e, 0x64, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x14, 0x63, 0x61, 0x6e, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x11, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e,
	0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x14, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52, 0x11,
	0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x65,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x0c,
	0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x6c, 0x6c, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x17, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x08, 0x52, 0x14, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x6e, 0x64, 0x4f, 0x74, 0x68, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x19, 0x63,
	0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x09,
	0x52, 0x15, 0x63, 0x61, 0x6e, 0x41, 0x64, 0x64, 0x57, 0x65, 0x62, 0x50, 0x61, 0x67, 0x65, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x61,
	0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x0a, 0x52, 0x0d, 0x63, 0x61, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x0b, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x61, 0x6e, 0x5f, 0x70, 0x69,
	0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x0c, 0x52, 0x0e, 0x63, 0x61, 0x6e, 0x50, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a, 0x11, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x0d, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x73, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73,
	0x65, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x12, 0x0a, 0x10,
	0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73,
	0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x61, 0x6e, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x5f,
	0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42,
	0x17, 0x0a, 0x15, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x63, 0x61, 0x6e,
	0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x6f, 0x6c, 0x6c, 0x73, 0x42, 0x1a, 0x0a, 0x18, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x42, 0x1c, 0x0a, 0x1a, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x77, 0x65, 0x62,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x63, 0x61, 0x6e, 0x5f,
	0x70, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x42, 0x14, 0x0a, 0x12,
	0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x42, 0x18, 0x5a, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2d, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_chat_permissions_proto_rawDescOnce sync.Once
	file_chat_permissions_proto_rawDescData []byte
)

func file_chat_permissions_proto_rawDescGZIP() []byte {
	file_chat_permissions_proto_rawDescOnce.Do(func() {
		file_chat_permissions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_permissions_proto_rawDesc), len(file_chat_permissions_proto_rawDesc)))
	})
	return file_chat_permissions_proto_rawDescData
}

var file_chat_permissions_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_chat_permissions_proto_goTypes = []any{
	(*ChatPermissions)(nil), // 0: chat_permissions
}
var file_chat_permissions_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chat_permissions_proto_init() }
func file_chat_permissions_proto_init() {
	if File_chat_permissions_proto != nil {
		return
	}
	file_chat_permissions_proto_msgTypes[0].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_permissions_proto_rawDesc), len(file_chat_permissions_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_permissions_proto_goTypes,
		DependencyIndexes: file_chat_permissions_proto_depIdxs,
		MessageInfos:      file_chat_permissions_proto_msgTypes,
	}.Build()
	File_chat_permissions_proto = out.File
	file_chat_permissions_proto_goTypes = nil
	file_chat_permissions_proto_depIdxs = nil
}
